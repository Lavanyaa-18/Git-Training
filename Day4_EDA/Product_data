{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b25c8a99-e61f-46e0-9b51-076c7a5809e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Order_id               Product      Category  Quantity  Price  \\\n",
      "0       1001               LG A160            LG         4   6379   \n",
      "1       1002       alcatel OT-C651       alcatel         2   6816   \n",
      "2       1003            Oppo Reno3          Oppo         4  10355   \n",
      "3       1004        Xiaomi Mi Play        Xiaomi         2  10778   \n",
      "4       1005     BenQ-Siemens SL91  BenQ-Siemens         1   5472   \n",
      "5       1006        alcatel OT 556       alcatel         1   3780   \n",
      "6       1007        alcatel OT 531       alcatel         1   7276   \n",
      "7       1008               Oppo K1          Oppo         5  11002   \n",
      "8       1009          Sagem MC 940         Sagem         5  10429   \n",
      "9       1010         Siemens CFX65       Siemens         1   3820   \n",
      "10      1011           HTC Nexus 9           HTC         2   9099   \n",
      "11      1012          Philips W920       Philips         2   4604   \n",
      "12      1013           HTC TyTN II           HTC         5   5287   \n",
      "13      1014  XOLO Play Tegra Note          XOLO         2   5062   \n",
      "14      1015         Plum Capacity          Plum         4   3050   \n",
      "15      1016    Sony Ericsson W980          Sony         5   6385   \n",
      "16      1017           XOLO Era 1X          XOLO         3   8745   \n",
      "17      1018      Huawei nova plus        Huawei         5   9795   \n",
      "18      1019           Siemens S10       Siemens         4   3519   \n",
      "19      1020              LG KP265            LG         5   5012   \n",
      "\n",
      "    Total_Amount        Date  \n",
      "0              0   1/26/2025  \n",
      "1              0   8/11/2024  \n",
      "2              0    6/3/2024  \n",
      "3              0   2/18/2024  \n",
      "4              0    8/2/2024  \n",
      "5              0   9/17/2024  \n",
      "6              0    6/6/2024  \n",
      "7              0   3/25/2024  \n",
      "8              0   1/16/2025  \n",
      "9              0    9/1/2024  \n",
      "10             0    3/1/2024  \n",
      "11             0    3/3/2024  \n",
      "12             0   5/17/2024  \n",
      "13             0   2/19/2024  \n",
      "14             0   4/16/2024  \n",
      "15             0   8/27/2024  \n",
      "16             0    2/5/2025  \n",
      "17             0   4/27/2024  \n",
      "18             0    1/8/2025  \n",
      "19             0  12/17/2024  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv('Product_data.csv')\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fa612ee2-bb31-4068-b33b-81e0ec327f5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order_id</th>\n",
       "      <th>Product</th>\n",
       "      <th>Category</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Price</th>\n",
       "      <th>Total_Amount</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Order_id  Product  Category  Quantity  Price  Total_Amount   Date\n",
       "0      False    False     False     False  False         False  False\n",
       "1      False    False     False     False  False         False  False\n",
       "2      False    False     False     False  False         False  False\n",
       "3      False    False     False     False  False         False  False\n",
       "4      False    False     False     False  False         False  False\n",
       "5      False    False     False     False  False         False  False\n",
       "6      False    False     False     False  False         False  False\n",
       "7      False    False     False     False  False         False  False\n",
       "8      False    False     False     False  False         False  False\n",
       "9      False    False     False     False  False         False  False\n",
       "10     False    False     False     False  False         False  False\n",
       "11     False    False     False     False  False         False  False\n",
       "12     False    False     False     False  False         False  False\n",
       "13     False    False     False     False  False         False  False\n",
       "14     False    False     False     False  False         False  False\n",
       "15     False    False     False     False  False         False  False\n",
       "16     False    False     False     False  False         False  False\n",
       "17     False    False     False     False  False         False  False\n",
       "18     False    False     False     False  False         False  False\n",
       "19     False    False     False     False  False         False  False"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c60743c7-3f01-472b-b145-bbb993ade4cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Order_id            Product      Category  Quantity  Price  Total_Amount  \\\n",
      "0      1001            LG A160            LG         4   6379             0   \n",
      "1      1002    alcatel OT-C651       alcatel         2   6816             0   \n",
      "2      1003         Oppo Reno3          Oppo         4  10355             0   \n",
      "3      1004     Xiaomi Mi Play        Xiaomi         2  10778             0   \n",
      "4      1005  BenQ-Siemens SL91  BenQ-Siemens         1   5472             0   \n",
      "\n",
      "        Date  total  Total_amount  \n",
      "0  1/26/2025   6383         25516  \n",
      "1  8/11/2024   6818         13632  \n",
      "2   6/3/2024  10359         41420  \n",
      "3  2/18/2024  10780         21556  \n",
      "4   8/2/2024   5473          5472  \n"
     ]
    }
   ],
   "source": [
    "df['Total_amount'] = df['Quantity'] * df['Price'] # to find the total\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0794ece5-9baa-4af3-991b-0c8a3c6d2720",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Order_id               Product      Category  Quantity  Price  \\\n",
      "0       1001               LG A160            LG         4   6379   \n",
      "1       1002       alcatel OT-C651       alcatel         2   6816   \n",
      "2       1003            Oppo Reno3          Oppo         4  10355   \n",
      "3       1004        Xiaomi Mi Play        Xiaomi         2  10778   \n",
      "4       1005     BenQ-Siemens SL91  BenQ-Siemens         1   5472   \n",
      "6       1007        alcatel OT 531       alcatel         1   7276   \n",
      "7       1008               Oppo K1          Oppo         5  11002   \n",
      "8       1009          Sagem MC 940         Sagem         5  10429   \n",
      "10      1011           HTC Nexus 9           HTC         2   9099   \n",
      "11      1012          Philips W920       Philips         2   4604   \n",
      "12      1013           HTC TyTN II           HTC         5   5287   \n",
      "13      1014  XOLO Play Tegra Note          XOLO         2   5062   \n",
      "14      1015         Plum Capacity          Plum         4   3050   \n",
      "15      1016    Sony Ericsson W980          Sony         5   6385   \n",
      "16      1017           XOLO Era 1X          XOLO         3   8745   \n",
      "17      1018      Huawei nova plus        Huawei         5   9795   \n",
      "18      1019           Siemens S10       Siemens         4   3519   \n",
      "19      1020              LG KP265            LG         5   5012   \n",
      "\n",
      "    Total_Amount        Date  total  Total_amount  \n",
      "0              0   1/26/2025   6383         25516  \n",
      "1              0   8/11/2024   6818         13632  \n",
      "2              0    6/3/2024  10359         41420  \n",
      "3              0   2/18/2024  10780         21556  \n",
      "4              0    8/2/2024   5473          5472  \n",
      "6              0    6/6/2024   7277          7276  \n",
      "7              0   3/25/2024  11007         55010  \n",
      "8              0   1/16/2025  10434         52145  \n",
      "10             0    3/1/2024   9101         18198  \n",
      "11             0    3/3/2024   4606          9208  \n",
      "12             0   5/17/2024   5292         26435  \n",
      "13             0   2/19/2024   5064         10124  \n",
      "14             0   4/16/2024   3054         12200  \n",
      "15             0   8/27/2024   6390         31925  \n",
      "16             0    2/5/2025   8748         26235  \n",
      "17             0   4/27/2024   9800         48975  \n",
      "18             0    1/8/2025   3523         14076  \n",
      "19             0  12/17/2024   5017         25060  \n"
     ]
    }
   ],
   "source": [
    "orders_above = df[df['Total_amount'] > 4000] #to find the total above 4000\n",
    "print(orders_above)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "24046b76-60a0-41cd-894b-f336d6bbeaf6",
   "metadata": {},
   "outputs": [],
   "source": [
    "most_sold_product"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
